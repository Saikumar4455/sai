What is javascript function?
	A javascript functionis is a block of code designed to perform particular task.
	A javascript function is executed when "someone" invokes it (calls it).

JavaScript Function Syntax
	A JavaScript function is defined with the function keyword, followed by a name, followed by parentheses ().
	Function names can contain letters, digits, underscores, and dollar signs (same rules as variables).
	The parentheses may include parameter names separated by commas:
     -(parameter1, parameter2, ...)
	The code to be executed, by the function, is placed inside curly brackets: {}	

Function Invocation
	The code inside the function will execute when "something" invokes (calls) the function:

	When an event occurs (when a user clicks a button)
	When it is invoked (called) from JavaScript code
	Automatically (self invoked)
	You will learn a lot more about function invocation later in this tutorial.

Function Return
	When JavaScript reaches a return statement, the function will stop executing.
	If the function was invoked from a statement, JavaScript will "return" to execute the code after the invoking statement.
	Functions often compute a return value. The return value is "returned" back to the "caller":

Why Functions?
 You can reuse code: Define the code once, and use it many times.
 You can use the same code many times with different arguments, to produce different results.
The () Operator Invokes the Function
  Using the example above, toCelsius refers to the function object, and toCelsius() refers to the function result.
  Accessing a function without () will return the function object instead of the function result. 

	synatx
	function functionName() {
	  let n1;
	  let n2;
	  let res;
	  //block of code
	  return res;
	  }
	  example
	  function addition() {
	  let n1=10;
	  let n2=20;
	  let res=n1+n2;
	  //block of code
	  return res;
	  }
	  }