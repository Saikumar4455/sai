JavaScript Arrays
	An array is a special variable, which can hold more than one value:
	const cars = ["Saab", "Volvo", "BMW"];

Why Use Arrays?
If you have a list of items (a list of car names, for example), storing the cars in single variables could look like this:

	let car1 = "Saab";
	let car2 = "Volvo";
	let car3 = "BMW";	

Creating an Array
	Using an array literal is the easiest way to create a JavaScript Array.
	const array_name = [item1, item2, ...]; 
	
Spaces and line breaks are not important. A declaration can span multiple lines:	
	const cars = [
  "Saab",
  "Volvo",
  "BMW"
];

You can also create an array, and then provide the elements:
	Example
		const cars = [];
		cars[0]= "Saab";
		cars[1]= "Volvo";
		cars[2]= "BMW";
Using the JavaScript Keyword new
 The following example also creates an Array, and assigns values to it:		
 
Accessing Array Elements
You access an array element by referring to the index number:

const cars = ["Saab", "Volvo", "BMW"];
let car = cars[0] 

JavaScript Array pop()
    The pop() method removes the last element from an array:
JavaScript Array push()
    The push() method adds a new element to an array (at the end):	
JavaScript Array splice()
    The splice() method can be used to add new items to an array:	
	JavaScript Array slice()
The slice() method slices out a piece of an array into a new array.
   This example slices out a part of an array starting from array element 1 ("Orange"):


	